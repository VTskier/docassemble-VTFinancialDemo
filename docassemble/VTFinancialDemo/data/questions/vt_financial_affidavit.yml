---
include:
  - docassemble.ALToolbox:al_income.yml
  - docassemble.AssemblyLine:al_package.yml
---
objects:
  - jobs: ALItemizedJobList.using(complete_attribute='complete', ask_number=True)
  - other_incomes: ALIncomeList
  - house_expenses_paid_by_user: ALExpenseList
  - house_expenses_paid_by_other: ALExpenseList
  - house_expenses_total: ALExpenseList
---
objects:
  - jobs[i].employer_paid_expenses: ALIncomeList
---
id: interview order
mandatory: True
code: |
  house_expenses_total.gather()
  expense_summary
  if employed:
    jobs.gather()
    #need to add x.which_tips_commissions
    review_jobs

  else:
    why_unemployed
    
  if other_incomes.selected_types.any_true():
    other_incomes.there_are_any = True
    other_incomes.gathered
  
  improved_final_screen
---
generic object: ALItemizedJob
code: |
  x.source
  x.is_self_employed
  # NOTE: if `is_self_employed`, you need to set this yourself
  x.employer.name.first
  x.times_per_year
  x.to_add.complete_attribute = 'complete'
  x.to_subtract.complete_attribute = 'complete'
  if x.is_part_time:
    x.to_add["part time"].is_hourly = x.is_hourly
  else:
    x.to_add["full time"].is_hourly = x.is_hourly
  x.to_add.gather()
  x.to_subtract.gather()
  x.employer_paid_expenses.gather()
  x.complete = True
---
id: does employer pay expenses
question: Employer paid expenses for for your ${ jobs[i].source } job
fields:
  - Does your employer pay for any expenses?: jobs[i].employer_paid_expenses.there_are_any
    datatype: yesnoradio
---
id: expense information
question: |
  How much does your employer pay for your expenses for your ${ jobs[i].source }?
fields: 
  - Type of expense: jobs[i].employer_paid_expenses[j].source
    code: |
      expense_terms_ordered
  - Other (explain): jobs[i].employer_paid_expenses[j].source
    show if:
      variable: jobs[i].employer_paid_expenses[j].source
      is: other
  - Amount: jobs[i].employer_paid_expenses[j].value
    datatype: currency
  - How often do you pay this amount?: jobs[i].employer_paid_expenses[j].times_per_year
    default: 12
    code: |
      times_per_year_for_expenses
---
id: are there more employer pay expenses
question: Does your employer pay for other expenses for ${ jobs[i].source }?
subquestion: |
  % if jobs[i].employer_paid_expenses.number_gathered() > 0:
  You've already told us about **${ comma_and_list( [an_expense.source for an_expense in jobs[i].employer_paid_expenses.complete_elements()] ) }**.
  % endif
fields:
  - Does your employer pay for any other expenses for this job?: jobs[i].employer_paid_expenses.there_is_another
    datatype: yesnoradio
---
id: Are there other incomes
question: |
  Do you have other incomes?
fields:
  - Do you have any of these incomes?: which_other_incomes
    datatype: checkboxes
    choices:
      - Annuities: annuities
      - Retirement: retirement
---
id: LSV income info for list
generic object: ALIncomeList
question: |
  Tell us about your income from ${ x[i].source }
subquestion: |
  % if i > 1:
  You have already told us about your incomes from ${ comma_and_list([income.source for income in x.complete_elements()]) }.
  % elif i > 0:
  You have already told us about your income from ${ comma_and_list([income.source for income in x.complete_elements()]) }.
  % endif
fields:
  - Times per year you receive this income: x[i].times_per_year
    input type: radio
    code: |
      times_per_year_list
  - Amount of income: x[i].value
    datatype: currency
---
id: job review
question: |
  Are you employed?
fields:
  - Are you employed?: employed
    datatype: yesnoradio
  - I am currently unemployed because: why_unemployed
    hide if: employed
---
#Brainstorm gathering code for generic tip_commissions - how much and how often   
---
id: Tips and commissions
generic object: ALItemizedJob
question: |
    Tell us about these
fields:
    - Which of these do you have: x.which_tips_commissions
      datatype: checkboxes
      choices:
        - Tips: tips
        - Commissions: commissions
        - Bonuses: bonuses
        - Royalties: royalties
    - How much do you get in tips, commissions, bonuses, royalties? (Q2): x.to_add['tips_commissions'].value
      datatype: currency
      required: False
---
id: expenses
generic object: ALExpenseList
question: Do you have any ${ x.name } expenses?
fields:
  - Do you have any ${ x.name } expenses?: x.there_are_any
    datatype: yesnoradio
---
code: |
  house_expenses_total.name = "household"
  house_expenses_total.choices = ["rent","heat","phone"]
---

---
code: |
  house_expenses_paid_by_other.name = house_expenses_total.name
  for index, expense in house_expenses_total.enumerate():
    house_expenses_paid_by_other[index].source = expense.source
    house_expenses_paid_by_other[index].
---
id: expense information
generic object: ALExpenseList
question: |
  What are your ${ x.name } expenses?
fields: 
  - Type of expense: x[i].source
    code: |
      x.choices
  - Other (explain): x[i].source
    show if:
      variable: x[i].source
      is: other
  - Amount: x[i].value
    datatype: currency
  - How often do you pay this amount?: x[i].times_per_year
    default: 12
    code: |
      times_per_year_for_expenses
---
id: are there more expenses
generic object: ALExpenseList
question: Do you have other ${ x.name } expenses?
subquestion: |
  % if x.number_gathered() > 0:
  You've already told us about **${ comma_and_list( [an_expense.source for an_expense in x.complete_elements()] ) }**.
  % endif
fields:
  - Is there another expense?: x.there_is_another
    datatype: yesnoradio
---
id: expense summary
continue button field: expense_summary
question: |
  Your expenses
subquestion: |
  Your household expenses are:
  ${ currency(house_expenses_total.total()) }
---
id: job review
question: |
  Review your jobs
subquestion: |
  Here is what you've told us about your jobs. You can add more or continue
  to the next question.

  ${ jobs.table }

  ${ jobs.add_action() }
field: review_jobs
---
event: improved_final_screen
question: Summary of your jobs
subquestion: |
  % if not employed:
  I am unemployed: ${employed} because ${ why_unemployed }
  
  % else:
  Employer name and address:
  
    ${ jobs[0].employer_name_address_phone() }
    
  Second employer:
  

  I am self-employed: NA at unknown company
  
  I have included overtime: ${ True }
  
  My monthly gross income excluding self-employed jobs (Q1. Salary or wages): ${ currency(jobs.total(source=["full time","part time"],times_per_year=12)) }

  My employer paid expenses add up to: ${ currency(sum([ expense.total(times_per_year=12) for expense in [ job.employer_paid_expenses for job in jobs ] ])) }
 

  % endif
#  Tips, commissions, bonuses, royalties: ${ currency(jobs.total(source=["tips_commissions"],times_per_year=12)) }
  
#  Self-employment income: Attach Sched C or result from page 11 - gross monthly
  
---